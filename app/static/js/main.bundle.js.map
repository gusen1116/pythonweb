{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://frontend/./src/ui.js","webpack://frontend/./src/slider.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/compat get default export","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/./src/index.js"],"sourcesContent":["// static/js/ui.js\ndocument.addEventListener('DOMContentLoaded', function() {\n    // 테마 토글 기능\n    const themeToggle = document.getElementById('theme-toggle');\n    const lightbulbIcon = themeToggle.querySelector('i');\n    \n    // 전구 아이콘 업데이트 함수\n    function updateLightbulbIcon() {\n      if (document.body.classList.contains('dark-theme')) {\n        // 다크 모드 - 꺼진 전구\n        lightbulbIcon.className = 'far fa-lightbulb';\n        themeToggle.title = '라이트 모드로 전환';\n        themeToggle.setAttribute('aria-label', '라이트 모드로 전환');\n      } else {\n        // 라이트 모드 - 켜진 전구\n        lightbulbIcon.className = 'fas fa-lightbulb';\n        themeToggle.title = '다크 모드로 전환';\n        themeToggle.setAttribute('aria-label', '다크 모드로 전환');\n      }\n    }\n    \n    updateLightbulbIcon();\n    \n    themeToggle.addEventListener('click', function() {\n      document.body.classList.toggle('dark-theme');\n      \n      // 로컬 스토리지에 테마 설정 저장\n      if (document.body.classList.contains('dark-theme')) {\n        localStorage.setItem('theme', 'dark');\n      } else {\n        localStorage.setItem('theme', 'light');\n      }\n      \n      updateLightbulbIcon();\n    });\n    \n    // 드롭다운 메뉴 기능\n    const dropdowns = document.querySelectorAll('.dropdown-toggle');\n    dropdowns.forEach(dropdown => {\n      dropdown.addEventListener('click', function() {\n        const menu = this.nextElementSibling;\n        const isExpanded = menu.classList.contains('show');\n        \n        // 모든 메뉴 닫기\n        document.querySelectorAll('.dropdown-menu.show').forEach(openMenu => {\n          openMenu.classList.remove('show');\n          openMenu.previousElementSibling.setAttribute('aria-expanded', 'false');\n        });\n        \n        // 클릭한 메뉴 토글\n        menu.classList.toggle('show');\n        this.setAttribute('aria-expanded', !isExpanded);\n      });\n      \n      // 키보드 접근성 지원\n      dropdown.addEventListener('keydown', function(e) {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          this.click();\n        }\n      });\n    });\n    \n    // 드롭다운 외부 클릭 시 닫기\n    document.addEventListener('click', function(e) {\n      if (!e.target.matches('.dropdown-toggle') && !e.target.closest('.dropdown-toggle')) {\n        document.querySelectorAll('.dropdown-menu.show').forEach(menu => {\n          menu.classList.remove('show');\n          menu.previousElementSibling.setAttribute('aria-expanded', 'false');\n        });\n      }\n    });\n    \n// ui.js 파일에서 스크롤 이벤트 관련 코드 수정\n// 스크롤 시 헤더 숨김/표시 효과\nlet lastScrollTop = 0;\nconst scrollThreshold = 50;\nconst scrollUpThreshold = 20; // 더 짧게 수정\nlet scrollUpAmount = 0;\n\nwindow.addEventListener('scroll', function() {\n  const currentScroll = window.pageYOffset || document.documentElement.scrollTop;\n  const header = document.querySelector('header');\n  \n  if (currentScroll > lastScrollTop) {\n    // 아래로 스크롤 중\n    scrollUpAmount = 0;\n    if (currentScroll > scrollThreshold) {\n      header.classList.add('hide');\n    }\n  } else {\n    // 위로 스크롤 중\n    scrollUpAmount += (lastScrollTop - currentScroll);\n    \n    if (scrollUpAmount > scrollUpThreshold) {\n      header.classList.remove('hide');\n    }\n  }\n  \n  lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;\n}, { passive: true });\n    \n    // 플래시 메시지 자동 숨김\n    const flashMessages = document.querySelectorAll('.flash-message');\n    if (flashMessages.length > 0) {\n      setTimeout(() => {\n        flashMessages.forEach(message => {\n          message.classList.add('fade-out');\n          setTimeout(() => {\n            message.style.display = 'none';\n          }, 500);\n        });\n      }, 4000);\n    }\n    \n    // 무한 스크롤 기능 초기화 (blog.html이나 search.html 등에서 사용)\n    if (typeof initInfiniteScroll === 'function') {\n      initInfiniteScroll();\n    }\n  });","// static/js/slider.js\ndocument.addEventListener('DOMContentLoaded', function() {\n    // 슬라이더 초기화\n    initSlider();\n    \n    // 슬라이더 기능 초기화\n    function initSlider() {\n      const sliderContainer = document.querySelector('.slider-container');\n      if (!sliderContainer) return;\n      \n      const sliderWrapper = sliderContainer.querySelector('.slider-wrapper');\n      const slides = sliderContainer.querySelectorAll('.slide');\n      const indicatorsContainer = sliderContainer.querySelector('.slider-indicators');\n      \n      if (!slides.length) return;\n      \n      // 슬라이더 상태\n      let currentIndex = 0;\n      let slideWidth = sliderContainer.clientWidth;\n      let autoplayTimer = null;\n      let touchStartX = 0;\n      let touchEndX = 0;\n      \n      // 초기 설정\n      function initialize() {\n        // 좌우 화살표 버튼 제거 (요청대로)\n        const prevBtn = sliderContainer.querySelector('.prev');\n        const nextBtn = sliderContainer.querySelector('.next');\n        if (prevBtn) prevBtn.remove();\n        if (nextBtn) nextBtn.remove();\n        \n        // 슬라이드 갯수에 맞게 인디케이터 생성\n        createIndicators();\n        \n        // 창 크기가 변경될 때 슬라이드 너비 업데이트\n        window.addEventListener('resize', function() {\n          slideWidth = sliderContainer.clientWidth;\n          goToSlide(currentIndex);\n        });\n        \n        // 첫 슬라이드 표시\n        goToSlide(0);\n        \n        // 자동 슬라이드 시작\n        startAutoplay();\n        \n        // 슬라이더 클릭 이벤트 추가 (왼쪽/오른쪽 영역 클릭 시 이동)\n        sliderContainer.addEventListener('click', function(e) {\n          const containerWidth = sliderContainer.clientWidth;\n          const clickX = e.offsetX;\n          \n          // 컨테이너의 왼쪽 30% 영역 클릭 시 이전 슬라이드\n          if (clickX < containerWidth * 0.3) {\n            goToPrevSlide();\n            resetAutoplay();\n          } \n          // 컨테이너의 오른쪽 30% 영역 클릭 시 다음 슬라이드\n          else if (clickX > containerWidth * 0.7) {\n            goToNextSlide();\n            resetAutoplay();\n          }\n        });\n        \n        // 터치 이벤트 추가 (모바일 지원)\n        sliderContainer.addEventListener('touchstart', function(e) {\n          touchStartX = e.changedTouches[0].screenX;\n        }, {passive: true});\n        \n        sliderContainer.addEventListener('touchend', function(e) {\n          touchEndX = e.changedTouches[0].screenX;\n          handleSwipe();\n        }, {passive: true});\n      }\n      \n      // 스와이프 처리\n      function handleSwipe() {\n        // 오른쪽에서 왼쪽으로 스와이프 (다음 슬라이드)\n        if (touchEndX < touchStartX - 50) {\n          goToNextSlide();\n          resetAutoplay();\n        }\n        // 왼쪽에서 오른쪽으로 스와이프 (이전 슬라이드)\n        else if (touchEndX > touchStartX + 50) {\n          goToPrevSlide();\n          resetAutoplay();\n        }\n      }\n      \n      // 인디케이터 생성\n      function createIndicators() {\n        if (!indicatorsContainer) return;\n        \n        indicatorsContainer.innerHTML = '';\n        \n        for (let i = 0; i < slides.length; i++) {\n          const indicator = document.createElement('span');\n          indicator.classList.add('indicator');\n          indicator.dataset.index = i;\n          \n          indicator.addEventListener('click', function() {\n            goToSlide(i);\n            resetAutoplay();\n          });\n          \n          indicatorsContainer.appendChild(indicator);\n        }\n        \n        updateIndicators();\n      }\n      \n      // 인디케이터 업데이트\n      function updateIndicators() {\n        if (!indicatorsContainer) return;\n        \n        const indicators = indicatorsContainer.querySelectorAll('.indicator');\n        indicators.forEach((indicator, index) => {\n          if (index === currentIndex) {\n            indicator.classList.add('active');\n          } else {\n            indicator.classList.remove('active');\n          }\n        });\n      }\n      \n      // 슬라이드 이동\n      function goToSlide(index) {\n        if (index < 0) {\n          index = slides.length - 1;\n        } else if (index >= slides.length) {\n          index = 0;\n        }\n        \n        currentIndex = index;\n        const offset = -currentIndex * slideWidth;\n        sliderWrapper.style.transform = `translateX(${offset}px)`;\n        \n        updateIndicators();\n      }\n      \n      // 이전 슬라이드\n      function goToPrevSlide() {\n        goToSlide(currentIndex - 1);\n      }\n      \n      // 다음 슬라이드\n      function goToNextSlide() {\n        goToSlide(currentIndex + 1);\n      }\n      \n      // 자동 슬라이드 시작\n      function startAutoplay() {\n        stopAutoplay();\n        autoplayTimer = setInterval(goToNextSlide, 5000); // 5초마다 다음 슬라이드\n      }\n      \n      // 자동 슬라이드 중지\n      function stopAutoplay() {\n        if (autoplayTimer) {\n          clearInterval(autoplayTimer);\n          autoplayTimer = null;\n        }\n      }\n      \n      // 자동 슬라이드 재설정\n      function resetAutoplay() {\n        stopAutoplay();\n        startAutoplay();\n      }\n      \n      // 초기화 실행\n      initialize();\n      \n      // 슬라이더 컨테이너에 마우스 오버 시 자동 슬라이드 일시 중지\n      sliderContainer.addEventListener('mouseenter', stopAutoplay);\n      sliderContainer.addEventListener('mouseleave', startAutoplay);\n    }\n  });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// src/index.js\n// 기본 사이트 기능에 필요한 파일만 가져오기\nimport './main.js';\nimport './ui.js';\nimport './slider.js';\n\n// 메인 애플리케이션 초기화\ndocument.addEventListener('DOMContentLoaded', function() {\n  console.log('메인 애플리케이션 초기화');\n  \n  // 무한 스크롤 초기화 (필요한 경우)\n  if (typeof initInfiniteScroll === 'function') {\n    initInfiniteScroll();\n  }\n});"],"names":["document","addEventListener","themeToggle","getElementById","lightbulbIcon","querySelector","updateLightbulbIcon","body","classList","contains","className","title","setAttribute","toggle","localStorage","setItem","querySelectorAll","forEach","dropdown","menu","this","nextElementSibling","isExpanded","openMenu","remove","previousElementSibling","e","key","preventDefault","click","target","matches","closest","lastScrollTop","scrollUpAmount","window","currentScroll","pageYOffset","documentElement","scrollTop","header","add","passive","flashMessages","length","setTimeout","message","style","display","initInfiniteScroll","sliderContainer","sliderWrapper","slides","indicatorsContainer","currentIndex","slideWidth","clientWidth","autoplayTimer","touchStartX","touchEndX","updateIndicators","indicator","index","goToSlide","offset","transform","goToPrevSlide","goToNextSlide","startAutoplay","stopAutoplay","setInterval","clearInterval","resetAutoplay","prevBtn","nextBtn","innerHTML","i","createElement","dataset","appendChild","createIndicators","containerWidth","clickX","offsetX","changedTouches","screenX","initialize","initSlider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}